<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>sru</string>
		<string>srd</string>
		<string>srm</string>
		<string>srw</string>
		<string>srs</string>
		<string>srf</string>
		<string>sra</string>
		<string>srp</string>
		<string>srj</string>
		<string>srq</string>
		<string>pbl</string>
		<string>pbt</string>
		<string>pbw</string>
	</array>
	<key>name</key>
	<string>PowerBuilder</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#general_rules</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#sql_keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literals</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#special_rules</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#final</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>//.*$</string>
					<key>name</key>
					<string>comment.line.double-slash.powerbuilder</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.documentation.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>^(HA)?\$.*$</string>
					<key>name</key>
					<string>comment.block.documentation.headers.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>final</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#primitives</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+|\-|\*|\/|\^|=|&gt;|&lt;|&amp;)</string>
					<key>name</key>
					<string>keyword.operator.symbols.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\w[\w\d$#%\-]*\b</string>
					<key>name</key>
					<string>variable.other.local.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>general_rules</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(close|commit|connect|declare|delete|describe|disconnect|execute|fetch|insert|open|prepare|rollback|select|selectblob|update|updateblob)\b(?!\s*\()</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.sql.powerbuilder</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>name</key>
					<string>meta.sql.statement.powerbuilder</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#sql_keywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#literals</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?&lt;=::|\.)\w[\w\d$#%\-]*\b</string>
							<key>name</key>
							<string>variable.other.local.powerbuilder</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\b:?(\w[\w\d$#%\-]*)\b</string>
							<key>name</key>
							<string>variable.other.local.powerbuilder</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.types.powerbuilder</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.complex.powerbuilder</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b(create)\s+(\w[\w\d$#%\-]*)\b</string>
					<key>name</key>
					<string>meta.variable.create.powerbuilder</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.types.powerbuilder</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.local.powerbuilder</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b(create\s+using)\s+(\w[\w\d$#%\-]*)\b</string>
					<key>name</key>
					<string>meta.variable.create_using.powerbuilder</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.types.powerbuilder</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.complex.powerbuilder</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.types.powerbuilder</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>storage.type.complex.powerbuilder</string>
						</dict>
						<key>6</key>
						<dict>
							<key>name</key>
							<string>keyword.other.types.powerbuilder</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>storage.type.complex.powerbuilder</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b(type)\s+(\w[\w\d$#%\-]*)\s+(from)\s+(\w[\w\d$#%\-]*)(\s+(within)\s+(\w[\w\d$#%\-]*))?\b</string>
					<key>name</key>
					<string>meta.type.declaration.powerbuilder</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.functions.powerbuilder</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.complex.powerbuilder</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b(throws)\s+(\w[\w\d$#%\-]*)\b</string>
					<key>name</key>
					<string>meta.function.throws_clause.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(or|and|not)\b</string>
					<key>name</key>
					<string>keyword.operator.boolean.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(constant|readonly|ref)\b</string>
					<key>name</key>
					<string>keyword.other.variable.modifier.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(public|private|protected|privatewrite|privateread|protectedread|protectedwrite|systemread|systemwrite)\b</string>
					<key>name</key>
					<string>keyword.other.access.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(super|this|sqlca|parent)\b</string>
					<key>name</key>
					<string>variable.language.powerbuiler</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(window|indirect|variables|end\s+variables|forward|end\s+forward|destroy|create|type|end\s+type|prototypes|within|autoinstantiate|system)\b</string>
					<key>name</key>
					<string>keyword.other.types.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(global|shared|local)\b</string>
					<key>name</key>
					<string>keyword.other.scope.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(return|function|end\s+function|subroutine|end\s+subroutine|throw|throws|event|end\s+event|on|end\s+on|call|dynamic|post|trigger|open|static|alias\s+for|alias|library|rpcfunc)\b</string>
					<key>name</key>
					<string>keyword.other.functions.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(if|then|else|elseif|case|choose|exit|continue|for|to|step|next|do|while|loop|until|try|catch|finally|release|end|goto|halt)\b</string>
					<key>name</key>
					<string>keyword.control.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(namespace|intrinsic|with|_debug|enumerated|external|native)\b</string>
					<key>name</key>
					<string>keyword.other.reserved.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b\d{4}-\d{2}-\d{2}\b</string>
					<key>name</key>
					<string>constant.numeric.date.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\d{2}:\d{2}:\d{2}(.\d+)?\b</string>
					<key>name</key>
					<string>constant.numeric.time.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\d+(\.\d+)?|(\.\d+))([eE][+\-]\d+)?\b</string>
					<key>name</key>
					<string>constant.numeric.number.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(true|false)\b</string>
					<key>name</key>
					<string>constant.language.boolean.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\w[\w\d$#%\-]*!</string>
					<key>name</key>
					<string>constant.language.enumerated.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>primitives</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(any|blob|boolean|byte|char|character|date|datetime|dec|decimal|double|int|integer|long|longlong|longptr|real|string|time|uint|ulong|unsignedinteger|unsignedlong)\b</string>
					<key>name</key>
					<string>storage.type.primitives.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>special_rules</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b\w[\w\d$#%\-]*(?=\s*\()</string>
					<key>name</key>
					<string>entity.name.function.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?&lt;=::|\.)\w[\w\d$#%\-]*\b</string>
					<key>name</key>
					<string>variable.other.member.powerbuilder</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#types</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.powerbuilder</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\w[\w\d$#%\-]*)\s+(\w[\w\d$#%\-]*)(?=\s*\()</string>
					<key>name</key>
					<string>meta.function.declaration.powerbuilder</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#types</string>
								</dict>
							</array>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.local.powerbuilder</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b(\w[\w\d$#%\-]*)\s+(?!or|and|then)(\w[\w\d$#%\-]*)\b</string>
					<key>name</key>
					<string>meta.variable.declaration.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>sql_keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(or|and|xor|not)\b</string>
					<key>name</key>
					<string>keyword.operator.sql.boolean.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)^\s*(close|commit|connect|declare|delete|describe|disconnect|execute|fetch|insert|open|prepare|rollback|select|selectblob|update|updateblob)\b</string>
					<key>name</key>
					<string>keyword.operator.sql.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(set|current|of|is|using|null|from|into|values|where|first|prior|last|rollback|immediate|descriptor|cursor|procedure|for|of)\b</string>
					<key>name</key>
					<string>keyword.operator.sql.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>string-escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>~o?\d{3}</string>
					<key>name</key>
					<string>constant.character.escape.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>~h[0-9a-fA-F]{2}</string>
					<key>name</key>
					<string>constant.character.escape.powerbuilder</string>
				</dict>
				<dict>
					<key>match</key>
					<string>~.</string>
					<key>name</key>
					<string>constant.character.escape.powerbuilder</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\"</string>
					<key>end</key>
					<string>\"</string>
					<key>name</key>
					<string>string.quoted.double.powerbuilder</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\'</string>
					<key>end</key>
					<string>\'</string>
					<key>name</key>
					<string>string.quoted.single.powerbuilder</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string-escapes</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>types</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#primitives</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(\w[\w\d$#%\-]*)\b</string>
					<key>name</key>
					<string>storage.type.complex.powerbuilder</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.powerbuilder</string>
	<key>uuid</key>
	<string>EF182D00-2D16-4148-B916-27632C956F35</string>
</dict>
</plist>
